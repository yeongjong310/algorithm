// 가로 한 칸의 너비가 1이고, 높이가 양의 정수인 직사각형을 N개 이어붙여 히스토그램을 만들었다. 구체적으로, 왼쪽에서 i번째 직사각형의 높이는 hi이다. 편의상 히스토그램의 밑변 방을 x축, 높이 방향을 y축으로 두고, 첫 번째 직사각형의 왼쪽 아래 꼭짓점을 원점으로 두자. 다시 말해, 히스토그램의 i번째 직사각형의 왼쪽 아래 꼭짓점은 (i-1, 0), 오른쪽 위 꼭짓점은 (i, hi)가 된다. (1 ≤ i ≤ N)

// 히스토그램에 들어갈 수 있는 가장 큰 직사각형을 구하는 문제는 유명하다. 하지만 오늘은 가장 큰 직사각형 뿐만 아니라, 더 높아질 수 없는 직사각형들에 주목해보자.

// 히스토그램에 들어가는 직사각형 중 네 꼭짓점의 좌표가 모두 정수이고, 축과 평행한 직사각형 X를 생각해보자. 만약 X를 포함하면서 X보다 높이가 큰 직사각형이 존재하지 않는다면, X를 "꽉 끼는 직사각형"이라고 한다.

// 래준이는 꽉 끼는 직사각형들을 높이에 따라 분류하고자 한다. 높이가 h인 꽉 끼는 직사각형의 개수를 Th라고 하자. hi > 0인 모든 h에 대해 Th를 구하는 프로그램을 작성해보자.

//[3,2,1,1,3]	-> [[1,11],[2,2],[3,2]] H 1은 11개 2는 2개 3은 2개

// 설명

// 직사각형을 [왼쪽 아래 꼭짓점의 좌표, 오른쪽 위 꼭짓점의 좌표]로 표현했을 때,

// 높이가 3인 꽉 끼는 직사각형은 [(0, 0), (1, 3)], [(4,0), (5,3)]으로 2개이고,

// 높이가 2인 꽉 끼는 직사각형은 [(0, 0), (2, 2)], [(1, 0), (2, 2)]로 2개이다.

// 높이가 1인 꽉 끼는 직사각형은 [(0, 0), (5, 1)]을 비롯해 총 11개가 있다.

// 입렵 제한

// 첫 번째 인자로 히스토그램을 이루는 직사각형의 높이 h1, …, hN가 배열로 주어진다. (1 ≤ hi ≤ 109)
// 배열의 길이 N은 히스토그램의 가로 너비이다. (1 ≤ N ≤ 300,000)

function solution(H) {
  var answer = [[]];
  return answer;
}

solution([3, 2, 1, 1, 3]) ===
  [
    [1, 11],
    [2, 2],
    [3, 2],
  ];
